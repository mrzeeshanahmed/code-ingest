#!/usr/bin/env node
const { readFile, writeFile, mkdir } = require("node:fs/promises");
const { resolve, dirname } = require("node:path");

async function generate() {
  const repoRoot = resolve(__dirname, "..");
  const commandMapPath = resolve(repoRoot, "src", "commands", "commandMap.ts");
  const outputPath = resolve(repoRoot, "resources", "webview", "commandMap.generated.js");

  const source = await readFile(commandMapPath, "utf8");
  const match = source.match(/export const COMMAND_MAP\s*=\s*({[\s\S]*?})\s*as const/);

  if (!match) {
    throw new Error("Unable to locate COMMAND_MAP definition in commandMap.ts");
  }

  const mapObjectLiteral = match[1];
  const generated = `// This file is auto-generated by scripts/generateWebviewCommandMap.js\n// Do not edit manually.\n\nexport const COMMAND_MAP = ${mapObjectLiteral};\n`;

  await mkdir(dirname(outputPath), { recursive: true });
  await writeFile(outputPath, generated, "utf8");
  console.log(`Generated webview command map at ${outputPath}`);
}

generate().catch((error) => {
  console.error(error);
  process.exit(1);
});
