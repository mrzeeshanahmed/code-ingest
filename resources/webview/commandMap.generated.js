// This file is auto-generated by scripts/generateWebviewCommandMap.js

// Do not edit manually - changes will be overwritten

/**
 * Command map for CodeIngest webview communication
 * Generated on: 2025-10-09T14:20:47.876Z
 */

export const COMMAND_MAP = {
  // Commands sent from extension host to webview
  HOST_TO_WEBVIEW: {
  "arrowDown": "ArrowDown",
  "arrowLeft": "ArrowLeft",
  "arrowRight": "ArrowRight",
  "arrowUp": "ArrowUp",
  "enter": "Enter",
  "array": "array",
  "boolean": "boolean",
  "clearSelection": "clear-selection",
  "enum": "enum",
  "number": "number",
  "object": "object",
  "selectAll": "select-all",
  "string": "string",
  "unknown": "unknown"
},

  // Commands sent from webview to extension host
  WEBVIEW_TO_HOST: {
  "flushErrorReports": "codeIngest.flushErrorReports",
  "generateDigest": "codeIngest.generateDigest",
  "invertSelection": "codeIngest.invertSelection",
  "loadRemoteRepo": "codeIngest.loadRemoteRepo",
  "openDashboardPanel": "codeIngest.openDashboardPanel",
  "refreshTree": "codeIngest.refreshTree",
  "selectAll": "codeIngest.selectAll",
  "selectNone": "codeIngest.selectNone",
  "toggleRedactionOverride": "codeIngest.toggleRedactionOverride",
  "treeLoadMore": "codeIngest.tree.loadMore",
  "treeRetryDirectory": "codeIngest.tree.retryDirectory",
  "viewMetrics": "codeIngest.viewMetrics"
}
};

// Reverse lookup maps for validation
export const HOST_TO_WEBVIEW_REVERSE = Object.fromEntries(
  Object.entries(COMMAND_MAP.HOST_TO_WEBVIEW).map(([key, value]) => [value, key])
);

export const WEBVIEW_TO_HOST_REVERSE = Object.fromEntries(
  Object.entries(COMMAND_MAP.WEBVIEW_TO_HOST).map(([key, value]) => [value, key])
);

// Command validation functions
export function isValidHostToWebviewCommand(command) {
  return Object.values(COMMAND_MAP.HOST_TO_WEBVIEW).includes(command);
}

export function isValidWebviewToHostCommand(command) {
  return Object.values(COMMAND_MAP.WEBVIEW_TO_HOST).includes(command);
}

// Get all available commands
export function getAllCommands() {
  return {
    hostToWebview: Object.values(COMMAND_MAP.HOST_TO_WEBVIEW),
    webviewToHost: Object.values(COMMAND_MAP.WEBVIEW_TO_HOST)
  };
}
