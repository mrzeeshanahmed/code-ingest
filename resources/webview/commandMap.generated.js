// This file is auto-generated by scripts/generateWebviewCommandMap.js

// Do not edit manually - changes will be overwritten

/**
 * Command map for CodeIngest webview communication
 * Generated on: 2025-10-15T13:29:49.516Z
 */

export const COMMAND_MAP = {
  // Commands sent from extension host to webview
  HOST_TO_WEBVIEW: {
  "restoreState": "codeIngest.restoreState",
  "showError": "codeIngest.showError",
  "updateConfig": "codeIngest.updateConfig",
  "updatePreview": "codeIngest.updatePreview",
  "updateProgress": "codeIngest.updateProgress",
  "updateTreeData": "codeIngest.updateTreeData"
},

  // Commands sent from webview to extension host
  WEBVIEW_TO_HOST: {
  "applyPreset": "codeIngest.applyPreset",
  "collapseAll": "codeIngest.collapseAll",
  "deselectAll": "codeIngest.deselectAll",
  "expandAll": "codeIngest.expandAll",
  "flushErrorReports": "codeIngest.flushErrorReports",
  "generateDigest": "codeIngest.generateDigest",
  "loadRemoteRepo": "codeIngest.loadRemoteRepo",
  "openDashboardPanel": "codeIngest.openDashboardPanel",
  "refreshPreview": "codeIngest.refreshPreview",
  "refreshTree": "codeIngest.refreshTree",
  "copyPreview": "codeIngest.copyPreview",
  "selectAll": "codeIngest.selectAll",
  "toggleRedactionOverride": "codeIngest.toggleRedactionOverride",
  "updateSelection": "codeIngest.updateSelection",
  "viewMetrics": "codeIngest.viewMetrics",
  "webviewReady": "codeIngest.webviewReady"
}
};

// Reverse lookup maps for validation
export const HOST_TO_WEBVIEW_REVERSE = Object.fromEntries(
  Object.entries(COMMAND_MAP.HOST_TO_WEBVIEW).map(([key, value]) => [value, key])
);

export const WEBVIEW_TO_HOST_REVERSE = Object.fromEntries(
  Object.entries(COMMAND_MAP.WEBVIEW_TO_HOST).map(([key, value]) => [value, key])
);

// Command validation functions
export function isValidHostToWebviewCommand(command) {
  return Object.values(COMMAND_MAP.HOST_TO_WEBVIEW).includes(command);
}

export function isValidWebviewToHostCommand(command) {
  return Object.values(COMMAND_MAP.WEBVIEW_TO_HOST).includes(command);
}

// Get all available commands
export function getAllCommands() {
  return {
    hostToWebview: Object.values(COMMAND_MAP.HOST_TO_WEBVIEW),
    webviewToHost: Object.values(COMMAND_MAP.WEBVIEW_TO_HOST)
  };
}
